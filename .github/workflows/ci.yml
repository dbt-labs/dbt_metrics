name: CI

on:
  push:
    branches:
      - "main"
  pull_request:

jobs:
  integration-postgres:
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: gha_test

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: gha_test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install python dependencies
        run: |
          pip install --user --upgrade pip
          pip --version
          pip install --pre dbt-postgres

      - name: Setup dbt profile
        run: |
          mkdir -p ~/.dbt
          cp ./.github/sample.profiles.yml ~/.dbt/profiles.yml

      - name: Run dbt
        run: |
          cd integration_tests
          dbt deps --target postgres
          dbt build --target postgres --full-refresh

  integration-snowflake:
    # this requires the postgres integration tests to pass before running
    # needs: integration-postgres
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install python dependencies
        run: |
          pip install --user --upgrade pip
          pip --version
          pip install --pre dbt-snowflake

      - name: Setup dbt profile
        run: |
          mkdir -p ~/.dbt
          cp ./.github/sample.profiles.yml ~/.dbt/profiles.yml

      - name: Run dbt
        env:
          SNOWFLAKE_TEST_ACCOUNT: ${{ secrets.SNOWFLAKE_TEST_ACCOUNT }}
          SNOWFLAKE_TEST_USER: ${{ secrets.SNOWFLAKE_TEST_USER }}
          SNOWFLAKE_TEST_PASSWORD: ${{ secrets.SNOWFLAKE_TEST_PASSWORD }}
          SNOWFLAKE_TEST_ROLE: ${{ secrets.SNOWFLAKE_TEST_ROLE }}
          SNOWFLAKE_TEST_DATABASE: ${{ secrets.SNOWFLAKE_TEST_DATABASE }}
          SNOWFLAKE_TEST_WAREHOUSE: ${{ secrets.SNOWFLAKE_TEST_WAREHOUSE }}
        run: |
          cd integration_tests
          dbt deps --target snowflake
          dbt build --target snowflake --full-refresh
